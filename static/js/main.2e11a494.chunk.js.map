{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","this","setInterval","setState","console","log","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","className","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAGjCK,QAAQC,KAAI,IAAIP,MAAOC,wBACtB,OAbP,gCAgBE,SAAmBO,GACbA,EAAUC,OAASN,KAAKO,MAAMD,MAEhCH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eAA+DN,KAAKO,MAAMD,SAnBhF,kCAuBE,WACMN,KAAKD,SACPS,cAAcR,KAAKD,WAzBzB,oBA6BE,WACE,IAAQH,EAASI,KAAKL,MAAdC,KAER,OACE,qCACE,oDAAqBA,KACrB,kDAAmBI,KAAKO,MAAMD,eAnCtC,GAA2BG,IAAMC,WCD3BC,G,kNACJhB,MAAQ,CACNiB,gBAAgB,EAChBN,KAAM,G,4CAGR,WAAU,IAAD,OACP,EAAiCN,KAAKL,MAA9BiB,EAAR,EAAQA,eAAgBN,EAAxB,EAAwBA,KAcxB,OACE,sBAAKO,UAAU,MAAf,UACE,6CACA,wBACEC,KAAK,SACLC,QAjBY,WAChB,EAAKb,SAAS,CAAEU,gBAAgB,KAc9B,wBAMA,wBACEE,KAAK,SACLC,QAnBY,WAChB,EAAKb,SAAS,CAAEU,gBAAgB,KAgB9B,wBAMA,wBACEE,KAAK,SACLC,QArBY,WAChB,EAAKb,SAAS,CAAEI,KAAMU,KAAKC,MAAsB,IAAhBD,KAAKE,aAkBpC,6BAMCN,GAAkB,cAAC,EAAD,CAAON,KAAMA,W,GA1CtBG,IAAMC,YAgDTC,ICtDfQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2e11a494.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number,\n};\n\ntype State = {\n  time: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ time: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line\n      console.log(new Date().toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <>\n        <p>{`Current time: ${time}`}</p>\n        <p>{`Clock name: ${this.props.name}`}</p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ntype State = {\n  isClockVisible: boolean,\n  name: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    name: 0,\n  };\n\n  render() {\n    const { isClockVisible, name } = this.state;\n\n    const showClock = () => {\n      this.setState({ isClockVisible: true });\n    };\n\n    const hideClock = () => {\n      this.setState({ isClockVisible: false });\n    };\n\n    const clockName = () => {\n      this.setState({ name: Math.floor(Math.random() * 100) });\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button\n          type=\"button\"\n          onClick={showClock}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={hideClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={clockName}\n        >\n          Set random name\n        </button>\n        {isClockVisible && <Clock name={name} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}